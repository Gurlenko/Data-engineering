Послідовність виконання завдання
1. Треба створити репозиторій на GitHub, в якому ви писатимете код для домашніх завдань. Створити окрему робочу гілку для цього завдання. Саме завдання виконувати в папці lesson_02.
2. Написати джобу, яка витягує всі дані продажів з API та зберігає їх у raw-директорію:

➡️ API доступна за адресою: https://fake-api-vycpfa6oca-uc.a.run.app/
	•	
	•	Секретний токен до API: 2b8d97ce57d401abd89f45b0079d8790edd940e6

	•	Секретний токен в жодному разі не можна зберігати в коді, він обовʼязково має зберігатися у змінній середовища з назвою AUTH_TOKEN
	•	У файлі main.py має бути реалізований WEB-сервер за допомогою фреймворку Flask, який працює локально і приймає команди у вигляді POST-запитів на порт 8081


	•	Шлях зберігання повинен мати вигляд: /path/to/my_dir/raw/sales/2022-08-09. Цей шлях треба подавати у вигляді параметра raw_dir для джоби
	•	Джоба обовʼязково має бути ідемпотентною. Для цього джоба сама має очищати вміст директорії raw_dir перед записом нових файлів.
	•	Кожну «сторінку» з API можна зберігати в окремому файлі або всі сторінки — в одному великому JSON. Файл повинен мати імʼя sales_2022-08-09.json або sales_2022-08-09_1.json, sales_2022-08-09_2.json тощо, якщо файлів декілька.
3. Написати джобу, яка JSON-файли з raw-директорії записує в stg-директорію в форматі Avro. Всі умови залишаються з попередньої джоби, окрім:
	•	
	•	Джоба має запускатися POST-запитом на localhost:8082 з 2 параметрами в JSON: raw_dir та stg_dir
	•	stg_dir повинна мати вигляд: /path/to/my_dir/stg/sales/2022-08-09
	•	raw_dir повинна мати такий самий вигляд, як і для першої джоби
	•	Як шаблон для коду можна модифікувати код з першої джоби
	•	Потрібно використати бібліотеку fastavro
4. Самостійно перевірити, чи обидві джоби працюють коректно, можна таким чином:
	
	•	Запустити Flask-сервер першої джоби в одному терміналі, а другої джоби — в іншому. Зверніть увагу, що сервери обох джоб мають працювати на різних портах.


	•	Якщо скрипт не впав, а відпрацював коректно, це свідчить, що код не має синтаксичних помилок
	•	Перевірити правильність обох джоб можна, переглянувши файли в raw та stg директоріях
	•	Результат повинен мати такий вигляд, якщо ви зберігали всі дані в одному файлі (тут коренева директорія називається file_storage, ви можете обрати іншу назву, внутрішні директорії та імена файлів повинні мати такий самий вигляд):

або так, якщо ви зберігали кожну «сторінку» в окремому файлі:

5. Вітаю, ви побудували перший в житті data pipeline!
